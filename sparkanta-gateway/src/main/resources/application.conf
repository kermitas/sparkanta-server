
ama {

  # =============================

  # Indicates if configuration should be printed to System.out at the beginning.
  # renderConfiguration = true

  # =============================

  # Indicated if messages published on broadcaster will be logged (with debug level).
  logMessagesPublishedOnBroadcaster = true

  # =============================

  initializeOnStartup {

    # Points to a class that has mixed in as.ama.EmptyRuntimePropertiesBuilder trait.
    # Main idea behind this class is to allow end user of Ama to prepare individual set of properties for each automatically created actor.
    # If not defined then empty Map will be passed to each created actor.
    amaConfigBuilderClassName = "as.sparkanta.ama.config.AmaConfigBuilder"

    # Appending actors list below with ${ama.initializeOnStartup.actors} means that actors defined in reference.conf of
    # ama-core project will be also initialized.
    actors = ${ama.initializeOnStartup.actors} [
      {
        class = "as.sparkanta.actor.shutdown.Shutdown"

        # if not defined then default value of 1000 will be used
        initializationOrder = 1000

        # if not defined or less-or-equal 0 then defaultSingleActorInitializationTimeoutInMs will be used
        initializationTimeoutInMs = 4000
      },
      {
        class = "as.sparkanta.actor.message.MessageDataAccumulator"

        # if not defined then default value of 1000 will be used
        initializationOrder = 1500

        # if not defined or less-or-equal 0 then defaultSingleActorInitializationTimeoutInMs will be used
        initializationTimeoutInMs = 4000
      },
      {
        class = "as.sparkanta.actor.tcp.serversocket.ServerSocket"

        # if not defined then default value of 1000 will be used
        initializationOrder = 1500

        # if not defined or less-or-equal 0 then defaultSingleActorInitializationTimeoutInMs will be used
        initializationTimeoutInMs = 4000
      },
      {
        class = "as.sparkanta.actor.tcp.socket.Socket"

        # if not defined then default value of 1000 will be used
        initializationOrder = 1500

        # if not defined or less-or-equal 0 then defaultSingleActorInitializationTimeoutInMs will be used
        initializationTimeoutInMs = 4000
      },
      {
        class = "as.sparkanta.actor.speedtest.SpeedTest"

        # if not defined then default value of 1000 will be used
        initializationOrder = 1500

        # if not defined or less-or-equal 0 then defaultSingleActorInitializationTimeoutInMs will be used
        initializationTimeoutInMs = 4000
      },
      {
        class = "as.sparkanta.actor.device.Device"

        # if not defined then default value of 1000 will be used
        initializationOrder = 1500

        # if not defined or less-or-equal 0 then defaultSingleActorInitializationTimeoutInMs will be used
        initializationTimeoutInMs = 4000

        config = {
          DeviceWorkerConfig = {
            warningTimeAfterMs = 2000
            inactivityTimeAfterMs = 3000
            extraTimeForWaitingOnSpeedTestResultInMs = 250
          }
        }
      },
      {
        class = "as.sparkanta.actor.device.DeviceStarter"

        # if not defined then default value of 1000 will be used
        initializationOrder = 1500

        # if not defined or less-or-equal 0 then defaultSingleActorInitializationTimeoutInMs will be used
        initializationTimeoutInMs = 4000

        config = {
          DeviceStarterConfig = {
            maximumQueuedSendDataMessages = 50
            deviceIdentificationTimeoutInMs = 2000
            pingPongSpeedTestTimeInMs = 1000
          }
        }
      },
      {
        class = "as.sparkanta.actor.device.blinker.Blinker"

        # if not defined then default value of 1000 will be used
        initializationOrder = 1500

        # if not defined or less-or-equal 0 then defaultSingleActorInitializationTimeoutInMs will be used
        initializationTimeoutInMs = 4000
      },
      {
        class = "as.sparkanta.actor.fakelistenat.FakeListenAtSender"

        # if not defined then default value of 1000 will be used
        initializationOrder = 1500

        # if not defined or less-or-equal 0 then defaultSingleActorInitializationTimeoutInMs will be used
        initializationTimeoutInMs = 4000
      }
    ]
  }

  # =============================

  # You can override command line arguments here.
  commandLine {
    overrideOriginallyPassedArguments = false
    arguments = "Alice has a cat!"
  }

  # =============================
}

# Original Akka configuration starts here.
akka {

  log-dead-letters = 40
  log-dead-letters-during-shutdown = on

  //loglevel = "INFO"
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"

  loggers = ["akka.event.slf4j.Slf4jLogger"]

  actor {

    debug {
      lifecycle = on
      fsm = on
      receive = on
    }

    # Just for testing purposes - enable them if you want to be sure that all messages and creators are serializable.
    serialize-creators = off
    serialize-messages = off
  }
}
